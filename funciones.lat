texto = '**titulo'


// header
// con esto cuento cuantas almoadillas tiene la frase al principio y entrego el resultado
// si entrega de 1 a 6 es un header
funcion verificar_header(texto)
    contador = 0
    i = 0
    mientras texto[i] == '#'
        contador++
        i++
    fin    
    retorno contador
fin


// cita
// si hay una '>' al inicio es una cita
funcion verificar_cita(texto)

    si(empieza_con(texto,'>'))
        retorno 1 // verdadero
    sino
        retorno 0 // falso
    fin

fin
// linea
// si hay trs lineas es una linea horizontal <hr>
funcion verificar_linea(texto)
    si(empieza_con(texto,'---'))
        retorno 1 // verdadero
    sino
        retorno 0 // falso
    fin

fin

/// lista 
funcion verificar_lista(texto)
l = longitud(texto)
    si( ( texto[0] == '*'  && texto[l-1] != '*'  )
        retorno 1
    sino
        retorno 0
    fin
fin

// lista numerica
funcion verificar_lista_numerica(texto)
l = longitud(texto)

    si( (texto[0] == '*' && texto[1] == '.' ) &&  texto[l-1] != '*' )
        retorno 1
    sino
        retorno 0
    fin
fin



/// Inclinado 
funcion verificar_inclinado(texto)

f = longitud(texto)

    si( (texto[0] == '*' && texto[1] != '*' ) && ( texto[f-1] == '*' && texto[f-2] != '*') )
        retorno 1
    sino
        retorno 0
    fin
fin

// Grueso
funcion verificar_grueso(texto)

l = longitud(texto)

    si( (texto[0] == '*' && texto[1] == '*' ) && ( texto[l-1] == '*' && texto[l-2] == '*') )
        retorno 1
    sino
        retorno 0
    fin
fin

// subrayado
funcion verificar_subrayado(texto)
l = longitud(texto)

    si( (texto[0] == '-' && texto[1] == '-' ) && ( texto[l-1] == '-' && texto[l-2] == '-' ) )
        retorno 1
    sino
        retorno 0
    fin
fin



escribir('********** al indice dos' . texto[2])

escribir(longitud(texto))

si(verificar_inclinado(texto))
    escribir('Es inclinado')
    
sino
    escribir('No es inclinado')
fin

si(verificar_grueso(texto))
    escribir('Es grueso ** ')
sino
    escribir('No es grueso')
fin




/// Subrayado  
/// Codigo 







si(verificar_linea(texto))
    escribir('Es una linea')
sino
    escribir('No es linea')
fin

si(verificar_cita(texto))
    escribir('Es una cita')
sino
    escribir('No es cita')
fin






// verifica si es una linea

si(verificar_header(texto))
    escribir('es un header')
sino 
    escribir('No es header')
fin




funcion quitar_marcas(texto)
    retorno texto
fin

c  = verificar_header(texto)
sm = quitar_marcas(texto)


elegir(c)
    caso 1:
        escribir("<h1>".sm."</h1>")
    caso 2:
        escribir("<h2>".sm."</h2>")
    caso 3:
        escribir("<h3>".sm."</h3>")
    caso 4:
        escribir("<h4>".sm."</h4>")
    caso 5:
        escribir("<h5>".sm."</h5>")
    caso 6:
        escribir("<h6>".sm."</h6>")
    defecto:
        escribir("<p>".sm."</p>")
fin









































